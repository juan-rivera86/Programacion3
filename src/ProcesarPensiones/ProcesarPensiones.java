/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProcesarPensiones;

import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author Juan Camilo
 */
public class ProcesarPensiones extends javax.swing.JFrame {

    /**
     * Creates new form ProcesarPensiones
     */
    public ProcesarPensiones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filePath = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Seleccione archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cantidad de salarios minimos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sexo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Tipo de pensi√≥n");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        panel.setBackground(new java.awt.Color(153, 153, 153));
        panel.setLayout(new java.awt.BorderLayout());

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Barras", "Pie" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser seleccionar= new JFileChooser();
        seleccionar.showOpenDialog(null);
        File f = seleccionar.getSelectedFile();
        String pathName=f.getAbsolutePath();
        filePath.setText(pathName);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AnalisisDatosPensiones cantidadSalarioMinimo= new AnalisisDatosPensiones();
        String file= filePath.getText().toString();
        File f= new File(file);
         if(f != null && f.exists()){
            try {
                List<AnalisisDatosPensiones> listadoFinal=cantidadSalarioMinimo.graficoCantidadSalarioMinimo(f);
                String itemText = (String)combo.getSelectedItem( );
                
                switch(itemText){
                    case "Barras":
                        DefaultCategoryDataset dataset= new DefaultCategoryDataset();
                        for(int i=0; i < listadoFinal.size();i++){
                            dataset.setValue(listadoFinal.get(i).value,"",listadoFinal.get(i).key);
                        }
                        JFreeChart chart= ChartFactory.createBarChart("Pensiones ", "Tipo salario", "Cantidad", dataset, PlotOrientation.HORIZONTAL, false, false, false);
                        CategoryPlot catPlot=chart.getCategoryPlot();
                        catPlot.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanel=new ChartPanel(chart);
                        panel.removeAll();
                        panel.add(chartPanel, BorderLayout.CENTER);
                        panel.validate();
                        break;
                        
                    case "Pie":
                         DefaultPieDataset datasetPie=new DefaultPieDataset(); 
                         for(int i=0; i < listadoFinal.size();i++){
                            datasetPie.setValue(listadoFinal.get(i).key,listadoFinal.get(i).value);
                        }
                        JFreeChart chartPie= ChartFactory.createPieChart("Pensiones",datasetPie );
                        //CategoryPlot catPlotPie=chartPie.getCategoryPlot();
                        //catPlotPie.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanelPie=new ChartPanel(chartPie);
                        panel.removeAll();
                        panel.add(chartPanelPie, BorderLayout.CENTER);
                        panel.validate();
                        
                        break;
            
                }
                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProcesarPensiones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        AnalisisDatosPensiones cantidadSalarioMinimo= new AnalisisDatosPensiones();
        String file= filePath.getText().toString();
        File f= new File(file);
        if(f != null && f.exists()){
            try {
                List<AnalisisDatosPensiones> listadoFinal=cantidadSalarioMinimo.graficoCantidadPorSexo(f);
                String itemText = (String)combo.getSelectedItem( );
                
                switch(itemText){
                    case "Barras":
                        DefaultCategoryDataset dataset= new DefaultCategoryDataset();
                        for(int i=0; i < listadoFinal.size();i++){
                            dataset.setValue(listadoFinal.get(i).value,"",listadoFinal.get(i).key);
                        }
                        JFreeChart chart= ChartFactory.createBarChart("Pensiones", "Sexo", "Cantidad", dataset, PlotOrientation.VERTICAL, false, false, false);
                        CategoryPlot catPlot=chart.getCategoryPlot();
                        catPlot.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanel=new ChartPanel(chart);
                        panel.removeAll();
                        panel.add(chartPanel, BorderLayout.CENTER);
                        panel.validate();
                        break;
                        
                    case "Pie":
                         DefaultPieDataset datasetPie=new DefaultPieDataset(); 
                         for(int i=0; i < listadoFinal.size();i++){
                            datasetPie.setValue(listadoFinal.get(i).key,listadoFinal.get(i).value);
                        }
                        JFreeChart chartPie= ChartFactory.createPieChart("Pensiones",datasetPie );
                        //CategoryPlot catPlotPie=chartPie.getCategoryPlot();
                       // catPlotPie.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanelPie=new ChartPanel(chartPie);
                        panel.removeAll();
                        panel.add(chartPanelPie, BorderLayout.CENTER);
                        panel.validate();
                        
                        break;
            
                }
                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProcesarPensiones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       AnalisisDatosPensiones cantidadSalarioMinimo= new AnalisisDatosPensiones();
        String file= filePath.getText().toString();
        File f= new File(file);
        if(f != null && f.exists()){
            try {
                List<AnalisisDatosPensiones> listadoFinal=cantidadSalarioMinimo.graficoCantidadPorTipo(f);
                String itemText = (String)combo.getSelectedItem( );
                
                switch(itemText){
                    case "Barras":
                        DefaultCategoryDataset dataset= new DefaultCategoryDataset();
                        for(int i=0; i < listadoFinal.size();i++){
                            dataset.setValue(listadoFinal.get(i).value,"",listadoFinal.get(i).key);
                        }
                        JFreeChart chart= ChartFactory.createBarChart("Pensiones por tipo de pensi√≥n", "Tipo de pensi√≥n", "Cantidad", dataset, PlotOrientation.HORIZONTAL, false, false, false);
                        CategoryPlot catPlot=chart.getCategoryPlot();
                        catPlot.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanel=new ChartPanel(chart);
                        panel.removeAll();
                        panel.add(chartPanel, BorderLayout.CENTER);
                        panel.validate();
                        break;
                        
                    case "Pie":
                         DefaultPieDataset datasetPie=new DefaultPieDataset(); 
                         for(int i=0; i < listadoFinal.size();i++){
                            datasetPie.setValue(listadoFinal.get(i).key,listadoFinal.get(i).value);
                        }
                        JFreeChart chartPie= ChartFactory.createPieChart("Pensiones por tipo de pensi√≥n",datasetPie );
                        //CategoryPlot catPlotPie=chartPie.getCategoryPlot();
                        //catPlotPie.setRangeGridlinePaint(Color.BLACK);

                        ChartPanel chartPanelPie=new ChartPanel(chartPie);
                        panel.removeAll();
                        panel.add(chartPanelPie, BorderLayout.CENTER);
                        panel.validate();
                        
                        break;
            
                }
                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProcesarPensiones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcesarPensiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcesarPensiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcesarPensiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcesarPensiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcesarPensiones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JTextField filePath;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
